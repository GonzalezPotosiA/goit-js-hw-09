{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAMC,SAASC,cAAc,QAEnC,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAe,IAAIC,SAAQ,CAACC,EAASC,KACzC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GAEFF,EAAQ,C,SAACJ,E,MAAUC,IACnBS,EAAAhB,GAASiB,OAAOC,QAAQ,qBAAqBZ,QAAeC,SAE5DI,EAAO,C,SAACL,E,MAAUC,IAClBS,EAAAhB,GAASiB,OAAOE,QAAQ,oBAAoBb,QAAeC,OAC7D,GACCA,EAAA,IAWL,OARAC,EACGY,MAAKC,IACJC,QAAQC,IAAI,iBAEbC,OAAMC,IACLH,QAAQC,IAAI,iBAGTf,CACT,CAGAN,EAAKwB,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMrB,EAAOsB,SAAS3B,EAAKK,MAAMc,OAC3BS,EAAKD,SAAS3B,EAAK4B,KAAKT,OACxBU,EAAOF,SAAS3B,EAAK6B,OAAOV,OAClC,IAAI,IAAIW,EAAE,EAAGA,EAAED,EAAQC,IACrBjB,YAAW,KACTV,EAAc2B,EAAE,EAAEzB,EAAMyB,EAAEF,EAAA,GACzBvB,EAAMyB,EAAEF,EAAA,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form= document.querySelector(\"form\");\n\nfunction createPromise(position, delay) {\n  \n  const createPromise= new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject({position, delay});\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  createPromise\n    .then(value=>{\n      console.log(\"it's rigth\");\n    })\n    .catch(error=>{\n      console.log(\"it's wrong\");\n    });\n  \n  return createPromise;\n};\n\n\nform.addEventListener(\"submit\", (event)=>{\n  event.preventDefault();\n  const delay= parseInt(form.delay.value);\n  const step=parseInt(form.step.value);\n  const amount=parseInt(form.amount.value);\n  for(let i=0; i<amount; i++){\n    setTimeout(() => {\n      createPromise(i+1,delay+i*step);\n    }, delay+i*step);\n  }\n\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","then","value","console","log","catch","error","addEventListener","event","preventDefault","parseInt","step","amount","i"],"version":3,"file":"03-promises.f9f2f54d.js.map"}